@import '../../../../../node_modules/bulma';

.chartContainer{
  height: 100%;
  width: auto;
  flex-direction: column;
  padding: 5px;
  justify-content: center;

  .loadingHintContainer{
    .loadingHint {
      font-size: 40px;
      text-align: center;
    }
  }

  .chartLine{
    flex-grow: 1;
    display: flex;
    align-items: center;
    height: 100%;

    .text{
      writing-mode: vertical-lr;
      transform: rotate(-180deg);
      margin-right: 10px;
    }

    .chart{
      width: 100%;
      height: 100%;
      background: #ffffff;
      display: flex;
    }
  }
}

.configContainer{
  .field + .field {
    border-top: 1px solid #dbdbdb;
  }

  .checkboxLabel {
    cursor: pointer;
  }
}

.form {
  margin-bottom: 0;
}

.help {
  width: 100%;
  overflow-y: auto;
  font-size: 1.5em;

  h2 {
    font-size: 1.2em;
    font-weight: bold;
  }

  h3 {
    font-size: 1.1em;
    font-weight: bold;
  }

  ul {
    list-style-type: circle;
    margin-left: 1.5em;
  }

  p {
    margin-bottom: 1em;
  }

  i {
    width: 25px;
    text-align: center;
  }
}

.errorMessage:before {
  content: "";
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

.errorMessage{
  width: 100%;
  text-align: center;
}

.label{
  color: #363636;
  display: block;
  font-size: 1rem;
  font-weight: 700;
}

.branchSelect{
  width:100%;
}

.branchSelect>select{
  border-color: #cccccc;
}

.popup {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 8px;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  z-index: 1000; /* Ensure it's above other elements */
}

.commitHeading {
  font-weight: bold;
  font-size: larger;
}

.node rect {
  stroke: #999;
  fill: #fff;
  stroke-width: 1.5px;
}

.edgePath path {
  stroke: #333;
  stroke-width: 1.5px;
}

.terminal {
  background-color: black;
  color: green;
  font-family: monospace;
  padding: 10px;
  border-radius: 5px;
  display: inline-block;
}

.svgIcon {
  /* Place the icon on the text baseline. */
  position: relative;
  top: .125em;

  /* Prevent the icon from shrinking inside a flex container. */
  flex-shrink: 0;

  /* Scale the icon to match the font-size of the parent element. */
  height: 1em;
  width: 1em;

  /* Let the icon take whatever color the parent has. */
  fill: currentColor;

  /*
   * If the icon is used on a link, which has a color transition,
   * we can also use a transition on the fill value.
  */
  transition: fill .3s;
}

svg {
  display: block;
}

.close-x {
  stroke: green;
  fill: transparent;
  stroke-linecap: round;
  stroke-width: 5;
}
