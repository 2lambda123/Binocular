name: Docker Image CI

on:
  pull_request:
   branches:
      - feature/149
      
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  USER_NAME: schoeberlt

jobs:

  build-minimal:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USER_NAME }}
        password: ${{ secrets.DOCKER_PAT }}

    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up Builder Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./binocular-minimal-img
        push: true
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ github.repository }}:latest-minimal
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  build-full:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USER_NAME }}
        password: ${{ secrets.DOCKER_PAT }}

    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Set up Builder Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./binocular-img
        push: true
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ github.repository }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
