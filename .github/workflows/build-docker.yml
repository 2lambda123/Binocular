name: Docker Image CI

on: push
# on:
#   push:
#     branches:
#       - develop
#       - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: "ghcr.io/inso-tuwien"

jobs:
  
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setting env variables
        id: docker_setup
        uses: ./.github/actions/docker-env/
        with:
          imageName: binocular-frontend

      - name: Debug echo env variables
        run: |
          echo "########## Docker Tags ##########"
          echo ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          echo ${{ env.IMAGE_NAME }}:${GITHUB_RUN_ID}
          echo ${{ env.IMAGE_NAME }}:${{ github.run_id }}
          echo ${{ env.IMAGE_NAME }}:latest
          echo "##########     env     ##########"
          echo NODE_VERSION: ${{ steps.docker_setup.nvmrc_node_version.outputs.NODE_VERSION }}
          echo ${{join(steps.docker_setup.nvmrc_node_version.outputs.*, '\n')}}
          echo ${{steps.docker_setup.nvmrc_node_version.outputs}}

      - name: Init Docker
        uses: ./.github/actions/docker-setup
        with:
          registry_url: ${{ env.REGISTRY }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./
      #     file: docker/Dockerfile.frontend
      #     push: true
      #     build-args: |
      #       NODE_VERSION=${{ env.NODE_VERSION }}
      #       NPM_BUILD_CMD=build:prod
      #     builder: ${{ steps.buildx.outputs.name }}
      #     tags: |
      #       ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #       ${{ env.IMAGE_NAME }}:${{ github.run_id }}
      #       ${{ env.IMAGE_NAME }}:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setting env variables
        uses: ./.github/actions/docker-env/
        with:
          imageName: binocular-backend

      - name: Debug echo env variables
        run: |
          echo "########## Docker Tags ##########"
          echo ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          echo ${{ env.IMAGE_NAME }}:${GITHUB_RUN_ID}
          echo ${{ env.IMAGE_NAME }}:${{ github.run_id }}
          echo ${{ env.IMAGE_NAME }}:latest
          echo "##########     env     ##########"
          echo NODE_VERSION: ${{ env.NODE_VERSION }}
