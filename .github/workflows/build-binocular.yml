name: Build Binocular

on:
  push:
     branches:
       - "feature/169"
  workflow_dispatch:
    inputs:
      databaseImage: 
        description: "Base image to build database from"
        default: "ghcr.io/inso-tuwien/binocular-database"
      databaseTag:
        description: "Base tag to build database from"
        default: "latest"

env:
  REGISTRY: ghcr.io
  ARANGO_VERSION: 3.11.3
  IMAGE_NAMESPACE: "ghcr.io/inso-tuwien"
  # IMAGE_BASE_NAME: ghcr.io/inso-tuwien/binocular-arangodb_3.11.3

jobs:

  build:

    runs-on: ubuntu-latest
    services:

      arangodb:
        # image: arangodb:3.11
        # image: ghcr.io/inso-tuwien/binocular-database:arangodb_3.11.3-no_volumes
        image: ${{ github.event.inputs.databaseImage || 'ghcr.io/inso-tuwien/binocular-database' }}:${{ github.event.inputs.databaseTag || 'latest' }}"
        options: --name "arangodb_svc"
        ports:  
          - 8529:8529
        env: 
          ARANGO_ROOT_PASSWORD: openSesame

    steps:

    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set .pupilrc variables
      uses: microsoft/variable-substitution@v1   
      with:
        files: .binocularrc_ci
      env:
        github.auth.token: ${{ secrets.GITHUB_TOKEN }}

    - name: Rename binocularrc
      run: mv .binocularrc_ci .binocularrc 

    - name: Set node version
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: npm
        cache-dependency-path: ./package-lock.json

    # Source: https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci --ignore-scripts

    - name: Run binocular
      run: DEBUG=idx*,importer*,git*,db* node binocular.js --no-open --no-server

    - name: Build
      run: npm run build

    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: binocular_ui
        path: dist/

    - name: docker ps
      run: docker ps

    - name: Set docker image env var
      run: |
        # SHORT_SHA source: https://stackoverflow.com/questions/59810838/how-to-get-the-short-sha-for-the-github-workflow
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
        echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
        echo "SHORT_SHA" ${SHORT_SHA}
        #
        BINOCULAR_DATABASE_IMAGE_NAME="${IMAGE_NAMESPACE}/binocular-database"
        echo "BINOCULAR_DATABASE_IMAGE_NAME=${BINOCULAR_DATABASE_IMAGE_NAME}" >> $GITHUB_ENV
        echo "BINOCULAR_DATABASE_IMAGE_NAME" ${BINOCULAR_DATABASE_IMAGE_NAME}
        #
        BINOCULAR_DATABASE_IMAGE_TAG="arangodb${ARANGO_VERSION}-${GITHUB_REF_NAME}-${SHORT_SHA}"
        echo "BINOCULAR_DATABASE_IMAGE_TAG=${BINOCULAR_DATABASE_IMAGE_TAG}" >> $GITHUB_ENV
        echo "BINOCULAR_DATABASE_IMAGE_TAG" ${BINOCULAR_DATABASE_IMAGE_TAG}

    - name: Echo docker tags
      run: |
        echo ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG}
        echo ${BINOCULAR_DATABASE_IMAGE_NAME}:${GITHUB_RUN_ID}
        echo ${BINOCULAR_DATABASE_IMAGE_NAME}:latest
      
    - name: docker commit
      run: |
        echo ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG}
        docker commit arangodb_svc ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG}
      
    - name: docker images
      run: docker images

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push image
      run: |
        docker push ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG}
        #
        docker tag ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG} ${BINOCULAR_DATABASE_IMAGE_NAME}:${GITHUB_RUN_ID}
        docker push ${BINOCULAR_DATABASE_IMAGE_NAME}:${GITHUB_RUN_ID}
        #
        docker tag ${BINOCULAR_DATABASE_IMAGE_NAME}:${BINOCULAR_DATABASE_IMAGE_TAG} ${BINOCULAR_DATABASE_IMAGE_NAME}:latest
        docker push ${BINOCULAR_DATABASE_IMAGE_NAME}:latest

    # - name: Run tests
    #   run: npm run test

    # - name: Collect coverage
    #   run: npm run coverage
  deploy:
    runs-on: ubuntu-latest

    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Download Artifact from previous job
        uses: actions/download-artifact@v3
        with:
          name: binocular_ui
          path: dist/

      - name: Display structure of downloaded files
        run: |
          echo "url:" ${{ env.url }}
          echo "page_url:" ${{ steps.deployment.outputs.page_url }}
          ls -l dist/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'dist/'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
